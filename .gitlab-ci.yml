variables:
  RUSTFLAGS: "-D warnings"
  CARGO_HOME: "$CI_PROJECT_DIR/.cargo"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/dt/${CI_COMMIT_TAG}/dt-${CI_COMMIT_TAG}"

stages:
  - build
  - test
  - publish
  - release

cache: &global_cache
  key: one-key-to-rule-them-all
  paths:
    - .cargo/
    - target/
  policy: pull

fetch:
  image: rust:latest
  stage: build
  script:
    - cargo build --release
    - test "$CI_COMMIT_TAG" == "$(target/release/dt --version)"
    - mkdir bin
    - cp target/release/dt bin/dt-${CI_COMMIT_TAG}
  artifacts:
    paths:
      - bin
  rules:
    - if: $CI_COMMIT_TAG
  cache:
    <<: *global_cache
    policy: pull-push

clippy:
  image: rustlang/rust:nightly
  script:
    - cargo clippy --tests --color=always

lint-commits:
  image: node
  cache: []
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME'
  script:
    - npm install -g commitlint
    - commitlint --from=$CI_MERGE_REQUEST_DIFF_BASE_SHA --to=$CI_COMMIT_SHORT_SHA

fmt:
  image: rustlang/rust:nightly
  script:
    - cargo fmt --check

rust-nightly:
  image: rustlang/rust:nightly
  script:
    - cargo test -- --color=always

shellcheck:
  image: koalaman/shellcheck-alpine:stable
  script: find -name '*.sh' -type f -exec shellcheck {} '+'

test-autocomplete:
  image: bash
  script:
    - tools/bash-unit-tests.sh

upload binary:
  stage: publish
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file bin/dt-${CI_COMMIT_TAG} ${PACKAGE_REGISTRY_URL}'

changelog:
#  stage: publish
  image: alpine
  script:
    - apk add bash git
    - ./tools/changelog --as-web > description.env
  artifacts:
    reports:
      dotenv: description.env

print changelog:
  stage: publish
  image: alpine
  script:
    - echo $CHANGELOG

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - upload binary
    - changelog
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "releasing dt..."
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'automated release of dt for tag $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: 'dt-${CI_COMMIT_TAG}'
          url: "${PACKAGE_REGISTRY_URL}"
